//
// > COLOR CLASSES
//

//
// >> Background Color
//

// >>> Brand
@each $color, $value in $colors {
  .bg-#{$color} {
    color: $white;
    background-color: $value;

    // check for color contrast
    @if $value ==
      $sky or
      $value ==
      $oasis or
      $value ==
      $cool-gray or
      $value ==
      $warm-gray or
      $value ==
      $silver or
      $value ==
      $leaf
    {
      color: $midnight;
      p,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      .h1,
      .h2,
      .h3,
      .h4,
      .h5,
      .h6 {
        color: $midnight;
      }
    } @else if $value == $bloom or $value == $white {
      color: $black;
      p,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      .h1,
      .h2,
      .h3,
      .h4,
      .h5,
      .h6 {
        color: $black;
      }
    } @else {
      color: $white;
      p,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      .h1,
      .h2,
      .h3,
      .h4,
      .h5,
      .h6 {
        color: $white;
      }
    }
  }
}

// >>> Brand Transparent
@mixin background-transparent($bg-color) {
  background-color: rgba($bg-color, 0.7);
}
@each $color, $value in $colors-transparent {
  .bg-#{$color} {
    @include background-transparent($value);
  }
}

//
// >>> Theme Colors
//

// Increase contrast for primary color backgrounds
@each $color in "primary", "primary-dark", "primary-light" {
  .bg-#{$color} {
    color: $white;
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    .h1,
    .h2,
    .h3,
    .h4,
    .h5,
    .h6 {
      color: $white;
    }
  }
  .btn-#{$color} {
    color: $white;
    &:hover {
      color: $white;
    }
  }
  .btn-outline-#{$color} {
    &:hover {
      color: $white;
    }
  }
}

// >>> Grays
@each $color, $value in $grays {
  $background: $value;
  $text: $black;

  // check for color contrast
  @if $color == "600" or $color == "700" or $color == "800" or $color == "900" {
    $text: $white;
  }

  .bg-gray-#{$color} {
    color: $text;
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    .h1,
    .h2,
    .h3,
    .h4,
    .h5,
    .h6 {
      color: $text;
    }
    background-color: $background;
  }
}

// ensure color contrast
.bg-light {
  color: $black;
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .h1,
  .h2,
  .h3,
  .h4,
  .h5,
  .h6 {
    color: $black;
  }
  background-color: $light;
}
.bg-dark {
  color: $white;
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .h1,
  .h2,
  .h3,
  .h4,
  .h5,
  .h6 {
    color: $white;
  }
  background-color: $dark;
  .close {
    color: $white;
  }
}

//
// >> Border Colors
//
@each $color, $value in $colors {
  .border-#{$color} {
    border-color: $value;
  }
}

//
// >>> Buttons
//

// Brand
@each $color, $value in $colors {
  .btn-#{$color} {
    @if $value == $sky or $value == $cool-gray or $value == $warm-gray {
      @include button-variant(
        $value,
        $value,
        $hover-background: darken($value, 7.5%),
        $hover-border: darken($value, 15%),
        $active-background: darken($value, 10%),
        $active-border: darken($value, 17%)
      );
    } @else {
      @include button-variant(
        $value,
        $value,
        $hover-background: lighten($value, 15%),
        $hover-border: lighten($value, 7.5%),
        $active-background: lighten($value, 17%),
        $active-border: lighten($value, 10%)
      );
    }
  }
  .btn-outline-#{$color} {
    @include button-outline-variant($value, invert($value));
  }
}

//
// >> Text Color
//

// >>> Brand
@each $color, $value in $colors {
  .text-#{$color} {
    color: $value !important;
  }
}

// >>> Theme
@each $color, $value in $theme-colors {
  .text-#{$color} {
    // check for color contrast
    @if $value == $sky {
      // stylelint-disable-next-line declaration-no-important
      color: $azurite !important;
    } @else {
      color: $value !important;
    }
  }
}
